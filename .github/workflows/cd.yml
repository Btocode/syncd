name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [main, master]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check CI result
        id: check
        run: |
          if [ "${{ github.event.workflow_run.conclusion }}" == "success" ]; then
            echo "ci_success=true" >> $GITHUB_OUTPUT
          else
            echo "ci_success=false" >> $GITHUB_OUTPUT
          fi
    outputs:
      ci_success: ${{ steps.check.outputs.ci_success }}

  deploy:
    needs: check
    if: needs.check.outputs.ci_success == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e .
        uv pip install asyncpg

    - name: Run database migrations
      run: |
        uv run alembic upgrade head
      env:
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        API_V1_STR: /api/v1
        PROJECT_NAME: SyncD Backend
        CORS_ALLOWED_ORIGINS: '["http://localhost:1212"]'

    - name: Deploy to Render using Blueprint
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      run: |
        curl -X POST "https://api.render.com/v1/blueprints/${{ secrets.RENDER_BLUEPRINT_ID }}/deploys" \
          -H "accept: application/json" \
          -H "authorization: Bearer $RENDER_API_KEY"
