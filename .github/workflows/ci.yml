name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: syncd_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e ".[dev]"

    - name: Run database migrations
      run: |
        uv run alembic upgrade head
      env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_DB: syncd_test
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/syncd_test
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        API_V1_STR: /api/v1
        PROJECT_NAME: SyncD Backend
        CORS_ALLOWED_ORIGINS: '["http://localhost:3000"]'

    - name: Run tests
      run: |
        uv run pytest
      env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_DB: syncd_test
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/syncd_test
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        CORS_ALLOWED_ORIGINS: '["http://localhost:3000"]'

    - name: Run linting
      run: |
        uv run pre-commit run --all-files